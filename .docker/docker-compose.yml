name: "doppelganger"

networks:
  doppelganger-app:
    driver: bridge
volumes:
  postgres: {}
  node_modules: {}

services:
  backend:
    build:
      context: "../backend"
      dockerfile: "./.docker/container/Dockerfile"
    container_name: "doppelganger-backend"
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ../backend/.:/app
    networks:
      - doppelganger-app

  frontend:
    build:
      context: "../frontend"
      dockerfile: "./.docker/container/Dockerfile"
    container_name: "doppelganger-frontend"
    ports:
      - "127.0.0.1:5173:5173"
    depends_on:
      - backend
    volumes:
      - "../frontend:/app"
      - node_modules:/app/node_modules
    networks:
      - doppelganger-app

  postgres:
    build:
      context: "../"
      dockerfile: "./.docker/container/postgres/Dockerfile"
    container_name: "doppelganger-postgres"
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      PGUSER: "${DB_USERNAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
    restart: on-failure
    expose:
      - "5432"
    volumes:
      - "postgres:/var/lib/postgresql/data/"
    networks:
      - doppelganger-app